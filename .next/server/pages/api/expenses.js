"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/expenses";
exports.ids = ["pages/api/expenses"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "(api)/./pages/api/expenses.js":
/*!*******************************!*\
  !*** ./pages/api/expenses.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handleIncomingData)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// import { MongoClient } from 'mongodb';\n// export default async function handleIncomingData(req, res) {\n//   const url = 'mongodb://localhost:27017';\n//   const dbName = 'dataDB';\n//   try {\n//     const data = req.body;\n//     console.log(\"evidethe\",data);\n//     const { name, amount, tag } = data;\n//     console.log('Name:', name); // Output: Name: 100\n//     console.log('Amount:', amount); // Output: Amount: 123\n//     console.log('Tag:', tag); // Output: Tag: Shopping\n//     // Connect to MongoDB\n//     const client = await MongoClient.connect(url);\n//     const db = client.db(dbName);\n//     // Insert the data array into the 'expenses' collection\n//     const collection = db.collection('expenses');\n//     await collection.insertOne({ data });\n//     await client.close();\n//     res.status(200).json(data);\n//   } catch (error) {\n//     console.error('Error occurred while connecting to MongoDB:', error);\n//     res.status(500).json({ message: 'Internal server error' });\n//   }\n// }\n// import { MongoClient, ObjectId } from 'mongodb';\n// export default async function handleIncomingData(req, res) {\n//   const url = 'mongodb://localhost:27017';\n//   const dbName = 'dataDB';\n//   try {\n//     const data = req.body;\n//     console.log('Received data:', data);\n//       console.log(\"evidethe\",data);\n//     const { name, amount, tag } = data;\n//     console.log('Name:', name); // Output: Name: 100\n//     console.log('Amount:', amount); // Output: Amount: 123\n//     console.log('Tag:', tag); // Output: Tag: Shopping\n//     // Connect to MongoDB\n//     const client = await MongoClient.connect(url);\n//     const db = client.db(dbName);\n//     const collection = db.collection('expenses');\n//     // Retrieve the existing document with _id: 1\n//     const existingData = await collection.findOne({ _id: new ObjectId(1) });\n//     console.log('Existing data:', existingData);\n//     // Update the specific tag and its details in the existing data\n//     if (existingData && existingData.wallet && existingData.wallet[tag]) {\n//       const tagObject = existingData.wallet[tag];\n//       tagObject.total += amount;\n//       if (!tagObject.detail) {\n//         tagObject.detail = {};\n//       }\n//       tagObject.detail[name] = amount;\n//       // Update the modified data in MongoDB\n//       await collection.updateOne(\n//         { _id: ObjectId(1) },\n//         { $set: { wallet: existingData.wallet } }\n//       );\n//       console.log('Data updated successfully!');\n//     } else {\n//       console.log('Tag does not exist.');\n//     }\n//     await client.close();\n//     res.status(200).json({ message: 'Data updated successfully!' });\n//   } catch (error) {\n//     console.error('Error occurred while connecting to MongoDB:', error);\n//     res.status(500).json({ message: 'Internal server error' });\n//   }\n// }\n\nasync function handleIncomingData(req, res) {\n    const url = \"mongodb://localhost:27017\";\n    const dbName = \"dataDB\";\n    try {\n        const data = req.body;\n        console.log(\"evidethe\", data);\n        const { name, amount, tag } = data;\n        console.log(\"Name:\", name); // Output: Name: 100\n        console.log(\"Amount:\", amount); // Output: Amount: 123\n        console.log(\"Tag:\", tag); // Output: Tag: Shopping\n        // Connect to MongoDB\n        const client = await mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient.connect(url);\n        const db = client.db(dbName);\n        // Get the current data from MongoDB\n        const collection = db.collection(\"expenses\");\n        const existingData = await collection.findOne({\n            _id: 1\n        });\n        console.log();\n        // Check if the tag exists in the existing data\n        if (existingData.wallet.hasOwnProperty(tag)) {\n            // Increment the amount to the total inside the specific tag\n            existingData.wallet[tag].total += amount;\n            // Add the name and amount as key-value pairs inside the 'detail' of that tag\n            existingData.wallet[tag].detail[name] = amount;\n            // Update the document in MongoDB with the modified data\n            await collection.updateOne({\n                _id: 1\n            }, {\n                $set: existingData\n            });\n        } else {\n            // If the tag does not exist in the existing data, create a new entry for it\n            existingData.wallet[tag] = {\n                total: amount,\n                detail: {\n                    [name]: amount\n                }\n            };\n            // Update the document in MongoDB with the modified data\n            await collection.updateOne({\n                _id: 1\n            }, {\n                $set: existingData\n            });\n        }\n        await client.close();\n        res.status(200).json(data);\n    } catch (error) {\n        console.error(\"Error occurred while connecting to MongoDB:\", error);\n        res.status(500).json({\n            message: \"Internal server error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/expenses.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/expenses.js"));
module.exports = __webpack_exports__;

})();